int bpf_create_map_xattr(const struct bpf_create_map_attr *create_attr)
int bpf_create_map_node(enum bpf_map_type map_type, const char *name, int key_size, int value_size, int max_entries, __u32 map_flags, int node)
int bpf_create_map_name(enum bpf_map_type map_type, const char *name, int key_size, int value_size, int max_entries, __u32 map_flags)
int bpf_create_map(enum bpf_map_type map_type, int key_size, int value_size, int max_entries, __u32 map_flags)
int bpf_create_map_in_map_node(enum bpf_map_type map_type, const char *name, int key_size, int inner_map_fd, int max_entries, __u32 map_flags, int node)
int bpf_create_map_in_map(enum bpf_map_type map_type, const char *name, int key_size, int inner_map_fd, int max_entries, __u32 map_flags)
int bpf_load_program_xattr(const struct bpf_load_program_attr *load_attr, char *log_buf, size_t log_buf_sz)
int bpf_load_program(enum bpf_prog_type type, const struct bpf_insn *insns, size_t insns_cnt, const char *license, __u32 kern_version, char *log_buf, size_t log_buf_sz)
int bpf_verify_program(enum bpf_prog_type type, const struct bpf_insn *insns, size_t insns_cnt, __u32 prog_flags, const char *license, __u32 kern_version, char *log_buf, size_t log_buf_sz, int log_level)
int bpf_map_update_elem(int fd, const void *key, const void *value, __u64 flags)
int bpf_map_lookup_elem(int fd, const void *key, void *value)
int bpf_map_lookup_elem_flags(int fd, const void *key, void *value, __u64 flags)
int bpf_map_lookup_and_delete_elem(int fd, const void *key, void *value)
int bpf_map_delete_elem(int fd, const void *key)
int bpf_map_get_next_key(int fd, const void *key, void *next_key)
int bpf_map_freeze(int fd)
int bpf_map_delete_batch(int fd, void *keys, __u32 *count, const struct bpf_map_batch_opts *opts)
int bpf_map_lookup_batch(int fd, void *in_batch, void *out_batch, void *keys, void *values, __u32 *count, const struct bpf_map_batch_opts *opts)
int bpf_map_lookup_and_delete_batch(int fd, void *in_batch, void *out_batch, void *keys, void *values, __u32 *count, const struct bpf_map_batch_opts *opts)
int bpf_map_update_batch(int fd, void *keys, void *values, __u32 *count, const struct bpf_map_batch_opts *opts)
int bpf_obj_pin(int fd, const char *pathname)
int bpf_obj_get(const char *pathname)
int bpf_prog_attach(int prog_fd, int attachable_fd, enum bpf_attach_type type, unsigned int flags)
int bpf_prog_attach_xattr(int prog_fd, int attachable_fd, enum bpf_attach_type type, const struct bpf_prog_attach_opts *opts)
int bpf_prog_detach(int attachable_fd, enum bpf_attach_type type)
int bpf_prog_detach2(int prog_fd, int attachable_fd, enum bpf_attach_type type)
int bpf_link_create(int prog_fd, int target_fd, enum bpf_attach_type attach_type, const struct bpf_link_create_opts *opts)
int bpf_link_detach(int link_fd)
int bpf_link_update(int link_fd, int new_prog_fd, const struct bpf_link_update_opts *opts)
int bpf_iter_create(int link_fd)
int bpf_prog_test_run_xattr(struct bpf_prog_test_run_attr *test_attr)
int bpf_prog_test_run(int prog_fd, int repeat, void *data, __u32 size, void *data_out, __u32 *size_out, __u32 *retval, __u32 *duration)
int bpf_prog_get_next_id(__u32 start_id, __u32 *next_id)
int bpf_map_get_next_id(__u32 start_id, __u32 *next_id)
int bpf_btf_get_next_id(__u32 start_id, __u32 *next_id)
int bpf_link_get_next_id(__u32 start_id, __u32 *next_id)
int bpf_prog_get_fd_by_id(__u32 id)
int bpf_map_get_fd_by_id(__u32 id)
int bpf_btf_get_fd_by_id(__u32 id)
int bpf_link_get_fd_by_id(__u32 id)
int bpf_obj_get_info_by_fd(int bpf_fd, void *info, __u32 *info_len)
int bpf_prog_query(int target_fd, enum bpf_attach_type type, __u32 query_flags, __u32 *attach_flags, __u32 *prog_ids, __u32 *prog_cnt)
int bpf_raw_tracepoint_open(const char *name, int prog_fd)
int bpf_load_btf(const void *btf, __u32 btf_size, char *log_buf, __u32 log_buf_size, bool do_log)
int bpf_task_fd_query(int pid, int fd, __u32 flags, char *buf, __u32 *buf_len, __u32 *prog_id, __u32 *fd_type, __u64 *probe_offset, __u64 *probe_addr)
int bpf_enable_stats(enum bpf_stats_type type)
int bpf_prog_bind_map(int prog_fd, int map_fd, const struct bpf_prog_bind_opts *opts)
int bpf_prog_test_run_opts(int prog_fd, struct bpf_test_run_opts *opts)
void btf__free(struct btf *btf)
struct btf *btf__new(const void *data, __u32 size)
struct btf *btf__new_split(const void *data, __u32 size, struct btf *base_btf)
struct btf *btf__new_empty(void)
struct btf *btf__new_empty_split(struct btf *base_btf)
struct btf *btf__parse(const char *path, struct btf_ext **btf_ext)
struct btf *btf__parse_split(const char *path, struct btf *base_btf)
struct btf *btf__parse_elf(const char *path, struct btf_ext **btf_ext)
struct btf *btf__parse_elf_split(const char *path, struct btf *base_btf)
struct btf *btf__parse_raw(const char *path)
struct btf *btf__parse_raw_split(const char *path, struct btf *base_btf)
int btf__finalize_data(struct bpf_object *obj, struct btf *btf)
int btf__load(struct btf *btf)
__s32 btf__find_by_name(const struct btf *btf, const char *type_name)
__s32 btf__find_by_name_kind(const struct btf *btf, const char *type_name, __u32 kind)
__u32 btf__get_nr_types(const struct btf *btf)
const struct btf *btf__base_btf(const struct btf *btf)
const struct btf_type *btf__type_by_id(const struct btf *btf, __u32 id)
size_t btf__pointer_size(const struct btf *btf)
int btf__set_pointer_size(struct btf *btf, size_t ptr_sz)
enum btf_endianness btf__endianness(const struct btf *btf)
int btf__set_endianness(struct btf *btf, enum btf_endianness endian)
__s64 btf__resolve_size(const struct btf *btf, __u32 type_id)
int btf__resolve_type(const struct btf *btf, __u32 type_id)
int btf__align_of(const struct btf *btf, __u32 id)
int btf__fd(const struct btf *btf)
void btf__set_fd(struct btf *btf, int fd)
const void *btf__get_raw_data(const struct btf *btf, __u32 *size)
const char *btf__name_by_offset(const struct btf *btf, __u32 offset)
const char *btf__str_by_offset(const struct btf *btf, __u32 offset)
int btf__get_from_id(__u32 id, struct btf **btf)
int btf__get_map_kv_tids(const struct btf *btf, const char *map_name, __u32 expected_key_size, __u32 expected_value_size, __u32 *key_type_id, __u32 *value_type_id)
struct btf_ext *btf_ext__new(__u8 *data, __u32 size)
void btf_ext__free(struct btf_ext *btf_ext)
const void *btf_ext__get_raw_data(const struct btf_ext *btf_ext, __u32 *size)
 int btf_ext__reloc_func_info(const struct btf *btf, const struct btf_ext *btf_ext, const char *sec_name, __u32 insns_cnt, void **func_info, __u32 *cnt)
 int btf_ext__reloc_line_info(const struct btf *btf, const struct btf_ext *btf_ext, const char *sec_name, __u32 insns_cnt, void **line_info, __u32 *cnt)
__u32 btf_ext__func_info_rec_size(const struct btf_ext *btf_ext)
__u32 btf_ext__line_info_rec_size(const struct btf_ext *btf_ext)
struct btf *libbpf_find_kernel_btf(void)
int btf__find_str(struct btf *btf, const char *s)
int btf__add_str(struct btf *btf, const char *s)
int btf__add_type(struct btf *btf, const struct btf *src_btf, const struct btf_type *src_type)
int btf__add_int(struct btf *btf, const char *name, size_t byte_sz, int encoding)
int btf__add_float(struct btf *btf, const char *name, size_t byte_sz)
int btf__add_ptr(struct btf *btf, int ref_type_id)
int btf__add_array(struct btf *btf, int index_type_id, int elem_type_id, __u32 nr_elems)
int btf__add_struct(struct btf *btf, const char *name, __u32 sz)
int btf__add_union(struct btf *btf, const char *name, __u32 sz)
int btf__add_field(struct btf *btf, const char *name, int field_type_id, __u32 bit_offset, __u32 bit_size)
int btf__add_enum(struct btf *btf, const char *name, __u32 bytes_sz)
int btf__add_enum_value(struct btf *btf, const char *name, __s64 value)
int btf__add_fwd(struct btf *btf, const char *name, enum btf_fwd_kind fwd_kind)
int btf__add_typedef(struct btf *btf, const char *name, int ref_type_id)
int btf__add_volatile(struct btf *btf, int ref_type_id)
int btf__add_const(struct btf *btf, int ref_type_id)
int btf__add_restrict(struct btf *btf, int ref_type_id)
int btf__add_func(struct btf *btf, const char *name, enum btf_func_linkage linkage, int proto_type_id)
int btf__add_func_proto(struct btf *btf, int ret_type_id)
int btf__add_func_param(struct btf *btf, const char *name, int type_id)
int btf__add_var(struct btf *btf, const char *name, int linkage, int type_id)
int btf__add_datasec(struct btf *btf, const char *name, __u32 byte_sz)
int btf__add_datasec_var_info(struct btf *btf, int var_type_id, __u32 offset, __u32 byte_sz)
int btf__dedup(struct btf *btf, struct btf_ext *btf_ext, const struct btf_dedup_opts *opts)
struct btf_dump *btf_dump__new(const struct btf *btf, const struct btf_ext *btf_ext, const struct btf_dump_opts *opts, btf_dump_printf_fn_t printf_fn)
void btf_dump__free(struct btf_dump *d)
int btf_dump__dump_type(struct btf_dump *d, __u32 id)
int btf_dump__emit_type_decl(struct btf_dump *d, __u32 id, const struct btf_dump_emit_type_decl_opts *opts)
int libbpf_strerror(int err, char *buf, size_t size)
libbpf_print_fn_t libbpf_set_print(libbpf_print_fn_t fn)
struct bpf_object *bpf_object__open(const char *path)
struct bpf_object * bpf_object__open_file(const char *path, const struct bpf_object_open_opts *opts)
struct bpf_object * bpf_object__open_mem(const void *obj_buf, size_t obj_buf_sz, const struct bpf_object_open_opts *opts)
struct bpf_object * bpf_object__open_buffer(const void *obj_buf, size_t obj_buf_sz, const char *name)
struct bpf_object * bpf_object__open_xattr(struct bpf_object_open_attr *attr)
int bpf_object__pin_maps(struct bpf_object *obj, const char *path)
int bpf_object__unpin_maps(struct bpf_object *obj, const char *path)
int bpf_object__pin_programs(struct bpf_object *obj, const char *path)
int bpf_object__unpin_programs(struct bpf_object *obj, const char *path)
int bpf_object__pin(struct bpf_object *object, const char *path)
void bpf_object__close(struct bpf_object *object)
int bpf_object__load(struct bpf_object *obj)
int bpf_object__load_xattr(struct bpf_object_load_attr *attr)
int bpf_object__unload(struct bpf_object *obj)
const char *bpf_object__name(const struct bpf_object *obj)
unsigned int bpf_object__kversion(const struct bpf_object *obj)
int bpf_object__set_kversion(struct bpf_object *obj, __u32 kern_version)
struct btf *bpf_object__btf(const struct bpf_object *obj)
int bpf_object__btf_fd(const struct bpf_object *obj)
struct bpf_program * bpf_object__find_program_by_title(const struct bpf_object *obj, const char *title)
struct bpf_program * bpf_object__find_program_by_name(const struct bpf_object *obj, const char *name)
struct bpf_object *bpf_object__next(struct bpf_object *prev)
int bpf_object__set_priv(struct bpf_object *obj, void *priv, bpf_object_clear_priv_t clear_priv)
void *bpf_object__priv(const struct bpf_object *prog)
int libbpf_prog_type_by_name(const char *name, enum bpf_prog_type *prog_type, enum bpf_attach_type *expected_attach_type)
int libbpf_attach_type_by_name(const char *name, enum bpf_attach_type *attach_type)
int libbpf_find_vmlinux_btf_id(const char *name, enum bpf_attach_type attach_type)
struct bpf_program *bpf_program__next(struct bpf_program *prog, const struct bpf_object *obj)
struct bpf_program *bpf_program__prev(struct bpf_program *prog, const struct bpf_object *obj)
int bpf_program__set_priv(struct bpf_program *prog, void *priv, bpf_program_clear_priv_t clear_priv)
void *bpf_program__priv(const struct bpf_program *prog)
void bpf_program__set_ifindex(struct bpf_program *prog, __u32 ifindex)
const char *bpf_program__name(const struct bpf_program *prog)
const char *bpf_program__section_name(const struct bpf_program *prog)
 const char *bpf_program__title(const struct bpf_program *prog, bool needs_copy)
bool bpf_program__autoload(const struct bpf_program *prog)
int bpf_program__set_autoload(struct bpf_program *prog, bool autoload)
size_t bpf_program__size(const struct bpf_program *prog)
int bpf_program__load(struct bpf_program *prog, char *license, __u32 kern_version)
int bpf_program__fd(const struct bpf_program *prog)
int bpf_program__pin_instance(struct bpf_program *prog, const char *path, int instance)
int bpf_program__unpin_instance(struct bpf_program *prog, const char *path, int instance)
int bpf_program__pin(struct bpf_program *prog, const char *path)
int bpf_program__unpin(struct bpf_program *prog, const char *path)
void bpf_program__unload(struct bpf_program *prog)
struct bpf_link *bpf_link__open(const char *path)
int bpf_link__fd(const struct bpf_link *link)
const char *bpf_link__pin_path(const struct bpf_link *link)
int bpf_link__pin(struct bpf_link *link, const char *path)
int bpf_link__unpin(struct bpf_link *link)
int bpf_link__update_program(struct bpf_link *link, struct bpf_program *prog)
void bpf_link__disconnect(struct bpf_link *link)
int bpf_link__detach(struct bpf_link *link)
int bpf_link__destroy(struct bpf_link *link)
struct bpf_link * bpf_program__attach(struct bpf_program *prog)
struct bpf_link * bpf_program__attach_perf_event(struct bpf_program *prog, int pfd)
struct bpf_link * bpf_program__attach_kprobe(struct bpf_program *prog, bool retprobe, const char *func_name)
struct bpf_link * bpf_program__attach_uprobe(struct bpf_program *prog, bool retprobe, pid_t pid, const char *binary_path, size_t func_offset)
struct bpf_link * bpf_program__attach_tracepoint(struct bpf_program *prog, const char *tp_category, const char *tp_name)
struct bpf_link * bpf_program__attach_raw_tracepoint(struct bpf_program *prog, const char *tp_name)
struct bpf_link * bpf_program__attach_trace(struct bpf_program *prog)
struct bpf_link * bpf_program__attach_lsm(struct bpf_program *prog)
struct bpf_link * bpf_program__attach_cgroup(struct bpf_program *prog, int cgroup_fd)
struct bpf_link * bpf_program__attach_netns(struct bpf_program *prog, int netns_fd)
struct bpf_link * bpf_program__attach_xdp(struct bpf_program *prog, int ifindex)
struct bpf_link * bpf_program__attach_freplace(struct bpf_program *prog, int target_fd, const char *attach_func_name)
struct bpf_link *bpf_map__attach_struct_ops(struct bpf_map *map)
struct bpf_link * bpf_program__attach_iter(struct bpf_program *prog, const struct bpf_iter_attach_opts *opts)
int bpf_program__set_prep(struct bpf_program *prog, int nr_instance, bpf_program_prep_t prep)
int bpf_program__nth_fd(const struct bpf_program *prog, int n)
int bpf_program__set_socket_filter(struct bpf_program *prog)
int bpf_program__set_tracepoint(struct bpf_program *prog)
int bpf_program__set_raw_tracepoint(struct bpf_program *prog)
int bpf_program__set_kprobe(struct bpf_program *prog)
int bpf_program__set_lsm(struct bpf_program *prog)
int bpf_program__set_sched_cls(struct bpf_program *prog)
int bpf_program__set_sched_act(struct bpf_program *prog)
int bpf_program__set_xdp(struct bpf_program *prog)
int bpf_program__set_perf_event(struct bpf_program *prog)
int bpf_program__set_tracing(struct bpf_program *prog)
int bpf_program__set_struct_ops(struct bpf_program *prog)
int bpf_program__set_extension(struct bpf_program *prog)
int bpf_program__set_sk_lookup(struct bpf_program *prog)
enum bpf_prog_type bpf_program__get_type(const struct bpf_program *prog)
void bpf_program__set_type(struct bpf_program *prog, enum bpf_prog_type type)
enum bpf_attach_type bpf_program__get_expected_attach_type(const struct bpf_program *prog)
void bpf_program__set_expected_attach_type(struct bpf_program *prog, enum bpf_attach_type type)
int bpf_program__set_attach_target(struct bpf_program *prog, int attach_prog_fd, const char *attach_func_name)
bool bpf_program__is_socket_filter(const struct bpf_program *prog)
bool bpf_program__is_tracepoint(const struct bpf_program *prog)
bool bpf_program__is_raw_tracepoint(const struct bpf_program *prog)
bool bpf_program__is_kprobe(const struct bpf_program *prog)
bool bpf_program__is_lsm(const struct bpf_program *prog)
bool bpf_program__is_sched_cls(const struct bpf_program *prog)
bool bpf_program__is_sched_act(const struct bpf_program *prog)
bool bpf_program__is_xdp(const struct bpf_program *prog)
bool bpf_program__is_perf_event(const struct bpf_program *prog)
bool bpf_program__is_tracing(const struct bpf_program *prog)
bool bpf_program__is_struct_ops(const struct bpf_program *prog)
bool bpf_program__is_extension(const struct bpf_program *prog)
bool bpf_program__is_sk_lookup(const struct bpf_program *prog)
struct bpf_map * bpf_object__find_map_by_name(const struct bpf_object *obj, const char *name)
int bpf_object__find_map_fd_by_name(const struct bpf_object *obj, const char *name)
struct bpf_map * bpf_object__find_map_by_offset(struct bpf_object *obj, size_t offset)
struct bpf_map * bpf_map__next(const struct bpf_map *map, const struct bpf_object *obj)
struct bpf_map * bpf_map__prev(const struct bpf_map *map, const struct bpf_object *obj)
int bpf_map__fd(const struct bpf_map *map)
int bpf_map__reuse_fd(struct bpf_map *map, int fd)
const struct bpf_map_def *bpf_map__def(const struct bpf_map *map)
const char *bpf_map__name(const struct bpf_map *map)
enum bpf_map_type bpf_map__type(const struct bpf_map *map)
int bpf_map__set_type(struct bpf_map *map, enum bpf_map_type type)
__u32 bpf_map__max_entries(const struct bpf_map *map)
int bpf_map__set_max_entries(struct bpf_map *map, __u32 max_entries)
int bpf_map__resize(struct bpf_map *map, __u32 max_entries)
__u32 bpf_map__map_flags(const struct bpf_map *map)
int bpf_map__set_map_flags(struct bpf_map *map, __u32 flags)
__u32 bpf_map__numa_node(const struct bpf_map *map)
int bpf_map__set_numa_node(struct bpf_map *map, __u32 numa_node)
__u32 bpf_map__key_size(const struct bpf_map *map)
int bpf_map__set_key_size(struct bpf_map *map, __u32 size)
__u32 bpf_map__value_size(const struct bpf_map *map)
int bpf_map__set_value_size(struct bpf_map *map, __u32 size)
__u32 bpf_map__btf_key_type_id(const struct bpf_map *map)
__u32 bpf_map__btf_value_type_id(const struct bpf_map *map)
__u32 bpf_map__ifindex(const struct bpf_map *map)
int bpf_map__set_ifindex(struct bpf_map *map, __u32 ifindex)
int bpf_map__set_priv(struct bpf_map *map, void *priv, bpf_map_clear_priv_t clear_priv)
void *bpf_map__priv(const struct bpf_map *map)
int bpf_map__set_initial_value(struct bpf_map *map, const void *data, size_t size)
bool bpf_map__is_offload_neutral(const struct bpf_map *map)
bool bpf_map__is_internal(const struct bpf_map *map)
int bpf_map__set_pin_path(struct bpf_map *map, const char *path)
const char *bpf_map__get_pin_path(const struct bpf_map *map)
bool bpf_map__is_pinned(const struct bpf_map *map)
int bpf_map__pin(struct bpf_map *map, const char *path)
int bpf_map__unpin(struct bpf_map *map, const char *path)
int bpf_map__set_inner_map_fd(struct bpf_map *map, int fd)
long libbpf_get_error(const void *ptr)
int bpf_prog_load_xattr(const struct bpf_prog_load_attr *attr, struct bpf_object **pobj, int *prog_fd)
int bpf_prog_load(const char *file, enum bpf_prog_type type, struct bpf_object **pobj, int *prog_fd)
int bpf_set_link_xdp_fd(int ifindex, int fd, __u32 flags)
int bpf_set_link_xdp_fd_opts(int ifindex, int fd, __u32 flags, const struct bpf_xdp_set_link_opts *opts)
int bpf_get_link_xdp_id(int ifindex, __u32 *prog_id, __u32 flags)
int bpf_get_link_xdp_info(int ifindex, struct xdp_link_info *info, size_t info_size, __u32 flags)
struct ring_buffer * ring_buffer__new(int map_fd, ring_buffer_sample_fn sample_cb, void *ctx, const struct ring_buffer_opts *opts)
void ring_buffer__free(struct ring_buffer *rb)
int ring_buffer__add(struct ring_buffer *rb, int map_fd, ring_buffer_sample_fn sample_cb, void *ctx)
int ring_buffer__poll(struct ring_buffer *rb, int timeout_ms)
int ring_buffer__consume(struct ring_buffer *rb)
int ring_buffer__epoll_fd(const struct ring_buffer *rb)
struct perf_buffer * perf_buffer__new(int map_fd, size_t page_cnt, const struct perf_buffer_opts *opts)
struct perf_buffer * perf_buffer__new_raw(int map_fd, size_t page_cnt, const struct perf_buffer_raw_opts *opts)
void perf_buffer__free(struct perf_buffer *pb)
int perf_buffer__epoll_fd(const struct perf_buffer *pb)
int perf_buffer__poll(struct perf_buffer *pb, int timeout_ms)
int perf_buffer__consume(struct perf_buffer *pb)
int perf_buffer__consume_buffer(struct perf_buffer *pb, size_t buf_idx)
size_t perf_buffer__buffer_cnt(const struct perf_buffer *pb)
int perf_buffer__buffer_fd(const struct perf_buffer *pb, size_t buf_idx)
enum bpf_perf_event_ret bpf_perf_event_read_simple(void *mmap_mem, size_t mmap_size, size_t page_size, void **copy_mem, size_t *copy_size, bpf_perf_event_print_t fn, void *private_data)
void bpf_prog_linfo__free(struct bpf_prog_linfo *prog_linfo)
struct bpf_prog_linfo * bpf_prog_linfo__new(const struct bpf_prog_info *info)
const struct bpf_line_info * bpf_prog_linfo__lfind_addr_func(const struct bpf_prog_linfo *prog_linfo, __u64 addr, __u32 func_idx, __u32 nr_skip)
const struct bpf_line_info * bpf_prog_linfo__lfind(const struct bpf_prog_linfo *prog_linfo, __u32 insn_off, __u32 nr_skip)
bool bpf_probe_prog_type(enum bpf_prog_type prog_type, __u32 ifindex)
bool bpf_probe_map_type(enum bpf_map_type map_type, __u32 ifindex)
bool bpf_probe_helper(enum bpf_func_id id, enum bpf_prog_type prog_type, __u32 ifindex)
bool bpf_probe_large_insn_limit(__u32 ifindex)
struct bpf_prog_info_linear * bpf_program__get_prog_info_linear(int fd, __u64 arrays)
void bpf_program__bpil_addr_to_offs(struct bpf_prog_info_linear *info_linear)
void bpf_program__bpil_offs_to_addr(struct bpf_prog_info_linear *info_linear)
int libbpf_num_possible_cpus(void)
int bpf_object__open_skeleton(struct bpf_object_skeleton *s, const struct bpf_object_open_opts *opts)
int bpf_object__load_skeleton(struct bpf_object_skeleton *s)
int bpf_object__attach_skeleton(struct bpf_object_skeleton *s)
void bpf_object__detach_skeleton(struct bpf_object_skeleton *s)
void bpf_object__destroy_skeleton(struct bpf_object_skeleton *s)
struct bpf_linker *bpf_linker__new(const char *filename, struct bpf_linker_opts *opts)
int bpf_linker__add_file(struct bpf_linker *linker, const char *filename)
int bpf_linker__finalize(struct bpf_linker *linker)
void bpf_linker__free(struct bpf_linker *linker)
int xsk_umem__fd(const struct xsk_umem *umem)
int xsk_socket__fd(const struct xsk_socket *xsk)
int xsk_setup_xdp_prog(int ifindex, int *xsks_map_fd)
int xsk_socket__update_xskmap(struct xsk_socket *xsk, int xsks_map_fd)
int xsk_umem__create(struct xsk_umem **umem, void *umem_area, __u64 size, struct xsk_ring_prod *fill, struct xsk_ring_cons *comp, const struct xsk_umem_config *config)
int xsk_umem__create_v0_0_2(struct xsk_umem **umem, void *umem_area, __u64 size, struct xsk_ring_prod *fill, struct xsk_ring_cons *comp, const struct xsk_umem_config *config)
int xsk_umem__create_v0_0_4(struct xsk_umem **umem, void *umem_area, __u64 size, struct xsk_ring_prod *fill, struct xsk_ring_cons *comp, const struct xsk_umem_config *config)
int xsk_socket__create(struct xsk_socket **xsk, const char *ifname, __u32 queue_id, struct xsk_umem *umem, struct xsk_ring_cons *rx, struct xsk_ring_prod *tx, const struct xsk_socket_config *config)
int xsk_socket__create_shared(struct xsk_socket **xsk_ptr, const char *ifname, __u32 queue_id, struct xsk_umem *umem, struct xsk_ring_cons *rx, struct xsk_ring_prod *tx, struct xsk_ring_prod *fill, struct xsk_ring_cons *comp, const struct xsk_socket_config *config)
int xsk_umem__delete(struct xsk_umem *umem)
void xsk_socket__delete(struct xsk_socket *xsk)
